{"version":3,"sources":["components/Menu.js","components/Welcome.js","components/Cell.js","components/Game.js","components/Reset.js","components/PathToggle.js","components/OnScreenNav.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Menu","react_default","a","createElement","className","onSubmit","this","props","handleSubmit","name","onChange","handleChange","value","columns","id","type","min","max","hmtlfor","rows","React","Component","Welcome","components_Menu","Cell","concat","counter","player","obstacles","includes","path","showPath","Game","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createBoard","bind","assertThisInitialized","console","log","board","index","i","j","push","components_Cell","key","steps","Reset","Button","onClick","clearState","content","PathToggle","toggle","pathToggle","OnScreenNav","Group","vertical","disabled","Icon","movePlayer","Board","ref","game","focus","onKeyDown","tabIndex","components_Game","components_Reset","components_PathToggle","components_OnScreenNav","handleOnScreenNav","App","state","gameStart","maxMoves","createObstacles","followPath","e","_this2","preventDefault","_this$state","playerPosition","Math","ceil","document","documentElement","style","setProperty","setState","target","defineProperty","removeObstacles","keyCode","Number","_this3","array","toConsumableArray","indexOf","splice","length","alert","_this$state2","random","notShowPath","_this4","BrowserRouter","Route","exact","render","components_Board","components_Welcome","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01659cfa.chunk.js","sourcesContent":["import React from 'react';\n// Menu component where you set the columns and rows for the game\n\n\nclass Menu extends React.Component{\n\n    render(){\n        return(\n            <div className=\"menu\">\n                <form onSubmit={this.props.handleSubmit}>\n                    <div className=\"input-field\">\n                        <input\n                            name=\"columns\"\n                            onChange={this.props.handleChange}\n                            value={this.props.columns}\n                            id=\"columns\"\n                            type=\"number\"\n                            min=\"7\"\n                            max=\"20\"\n                            className=\"validate\"/>\n                        <label className=\"active\" hmtlfor=\"columns\">Columns</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input\n                            name=\"rows\"\n                            onChange={this.props.handleChange}\n                            value={this.props.rows}\n                            id=\"rows\"\n                            type=\"number\"\n                            min=\"7\"\n                            max=\"20\"\n                            className=\"validate\"/>\n                        <label className=\"active\" hmtlfor=\"rows\">Rows</label>\n                    </div>\n                    <input className=\"btn\" value=\"Start\" type=\"submit\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Menu;\n","import React from 'react'\nimport Menu from './Menu'\n\nclass Welcome extends React.Component{\n    render(){\n        return(\n            <div>\n                <h2>Maze Game</h2>\n                <Menu               columns={this.props.columns}\n                                    rows={this.props.rows}\n                                    handleSubmit={this.props.handleSubmit}\n                                    handleChange={this.props.handleChange} />\n            </div>\n        );\n    }\n}\nexport default Welcome\n","import React from 'react';\n//checks if the square is either the player or a red square\n\nclass Cell extends React.Component{\n    render(){\n        return(\n            <div className={ `${ this.props.counter === this.props.player ? \"player\" : \"cell\"}\n\t\t\t\t\t\t\t${ this.props.obstacles.includes(this.props.counter) ? \"obstacles\" : \"\"}\n\t\t\t\t\t\t\t${(this.props.path.includes(this.props.counter)&& this.props.showPath) ? \"path\" : \"\"}`}>\n            </div>\n        )\n    }\n}\nexport default Cell;\n\n","import React from 'react'\nimport Cell from './Cell'\n\nclass Game extends React.Component{\n    constructor () {\n        super()\n        this.createBoard = this.createBoard.bind(this)\n}\n\n    createBoard () {\n        console.log(this.props.obstacles)\n        let board = [];\n        let index = 0;\n        for(let i = 0; i < this.props.columns; i++){\n            for(let j = 0; j < this.props.rows; j++){\n                index++\n\n                    board.push(<Cell key={index}\n                                       counter={index}\n                                       player={this.props.player}\n                                       obstacles={this.props.obstacles}\n                                        path = {this.props.path}\n                                        showPath = {this.props.showPath}/>)\n\n            }\n        }\n        return board\n    }\n\n\n    render(){\n        return(\n            <div className=\"gameBoard\">\n                {this.createBoard()}\n                <p>Steps: {this.props.steps}</p>\n            </div>\n        )\n    }\n\n}\nexport default Game\n","import React from 'react'\nimport {Button} from 'semantic-ui-react'\n\nclass Reset extends React.Component{\n\n\n    render(){\n        return(\n            <Button onClick = {this.props.clearState} className = \"btn\" content = \"Reset\" value=\"Reset\" type=\"submit\"/>\n        )\n    }\n}\n\nexport default Reset\n","import React from 'react'\nimport {Button} from 'semantic-ui-react'\n\nclass PathToggle extends React.Component{\n\n    render(){\n\n        return(\n            <Button toggle = {this.props.showPath} onClick = {this.props.pathToggle} className = \"btn\"  value=\"Path Toggle\" content = \"Path Toggle\" type=\"submit\"/>\n        )\n    }\n}\nexport default PathToggle\n","import React from 'react'\nimport {Button, Icon} from 'semantic-ui-react'\n\nclass OnScreenNav extends React.Component{\n    render(){\n        return(\n            <div className = \"screenNav\">\n            <Button.Group vertical>\n                <Button disabled><Icon /></Button>\n                <Button onClick = {this.props.movePlayer} type=\"submit\" value=\"Left\" ><Icon name = \"arrow left\" /></Button>\n                <Button disabled><Icon /></Button>\n            </Button.Group>\n            <Button.Group vertical>\n                <Button onClick = {this.props.movePlayer} type=\"submit\" value=\"Up\" ><Icon name = \"arrow up\"  /></Button>\n                <Button disabled><Icon /></Button>\n                <Button onClick = {this.props.movePlayer} type=\"submit\" value=\"Down\" ><Icon name = \"arrow down\" /></Button>\n            </Button.Group>\n                <Button.Group vertical>\n                    <Button disabled><Icon /></Button>\n                    <Button onClick = {this.props.movePlayer} type=\"submit\"  value=\"Right\" ><Icon name = \"arrow right\" /></Button>\n                    <Button disabled><Icon /></Button>\n                </Button.Group>\n\n            </div>\n        )\n    }\n}\nexport default OnScreenNav\n","import React  from 'react';\nimport Game from './Game'\nimport Reset from './Reset'\nimport PathToggle from './PathToggle'\nimport OnScreenNav from './OnScreenNav'\nimport {Button} from 'semantic-ui-react'\n\nclass Board extends React.Component {\n    render(){\n        return(\n            <div className=\"board\"\n                 ref={game => game && game.focus()}\n                 onKeyDown={this.props.movePlayer}\n                 tabIndex=\"0\">\n                <h3> Welcome </h3>\n                <Game\n                    columns={this.props.columns}\n                    rows={this.props.rows}\n                    player={this.props.player}\n                    steps={this.props.steps}\n                    obstacles={this.props.obstacles}\n                    path = {this.props.path}\n                    showPath = {this.props.showPath}/>\n                <Button.Group>\n                <Reset clearState={this.props.clearState}/>\n                <PathToggle pathToggle = {this.props.pathToggle} showPath = {this.props.showPath}/>\n                    </Button.Group>\n                <OnScreenNav movePlayer = {this.props.handleOnScreenNav} />\n            </div>\n        )\n    }\n}\n\n\nexport default Board\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Welcome from './components/Welcome'\nimport Board from './components/Board'\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        columns: 10,\n        rows: 10,\n        gameStart: false,\n        player: 1,\n        obstacles: [],\n        steps: 0,\n        path: [],\n        showPath: false,\n        maxMoves: 100\n    }\n\n    handleChange = this.handleChange.bind(this);\n    handleSubmit = this.handleSubmit.bind(this);\n    createObstacles = this.createObstacles.bind(this);\n    movePlayer = this.movePlayer.bind(this);\n    followPath = this.followPath.bind(this);\n    clearState = this.clearState.bind(this);\n    pathToggle = this.pathToggle.bind(this);\n    handleOnScreenNav = this.handleOnScreenNav.bind(this);\n\n    // Start game, send columns and rows to css and set player position\n    handleSubmit(e){\n        e.preventDefault();\n        const {columns, rows } = this.state;\n        // should randomize this\n        let playerPosition = ((columns * rows) / 2) % 2 === 0 ? ((columns * rows) / 2) - columns/2 : Math.ceil((columns * rows) / 2 );\n        document.documentElement.style.setProperty(\"--columns\", columns);\n        document.documentElement.style.setProperty(\"--rows\", rows);\n        this.setState({ gameStart: true, player: playerPosition }, () =>{\n            this.createObstacles();\n        });\n    }\n\n    handleChange(e){\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    movePlayer(e){\n        this.followPath();\n        if(this.state.obstacles.includes(this.state.player)){\n            this.removeObstacles(this.state.player);\n        }\n        if(e.keyCode === 39){\n            // right\n            if(this.state.player+1 <= this.state.columns * this.state.rows && this.state.player % this.state.columns !== 0  ){\n                this.setState({player: this.state.player + 1, steps: this.state.steps + 1 })\n            } else this.setState({player: this.state.player})\n        } else if(e.keyCode === 37){\n            //left\n            if(this.state.player-1 > 0 && this.state.player % this.state.columns !== 1){\n                this.setState({ player: this.state.player - 1, steps: this.state.steps + 1 })\n            } else this.setState({player: this.state.player})\n        } else if(e.keyCode === 38){\n            // up\n            if(this.state.player - this.state.columns > 0){\n                this.setState({player: this.state.player - this.state.columns, steps: this.state.steps + 1 })\n            } else this.setState({ player: this.state.player })\n        } else if(e.keyCode === 40){\n            //down\n            if(this.state.player + Number(this.state.columns) <= this.state.columns * this.state.rows){\n                this.setState({player: this.state.player + Number(this.state.columns), steps: this.state.steps + 1 })\n            } else this.setState({player: this.state.player })\n        }\n    }\n\n    removeObstacles(obstacles){\n        let array = [...this.state.obstacles];\n        let index = array.indexOf(obstacles);\n        array.splice(index,1);\n        this.setState({ obstacles: array }, () => {\n            if(this.state.obstacles.length === 0 ) {\n                alert(`Game finished: You took ${this.state.steps - 1 } steps`)\n                this.clearState()\n            }\n        })\n    }\n\n    createObstacles(){\n        const {columns, rows, player } = this.state;\n        let array = [];\n        let index = 0;\n        for(let i = 0; i < columns; i++){\n            for(let j = 0; j < rows; j++){\n                index++\n                if(Math.ceil(Math.random()*10) === 5) {\n                    if(index !== player) array.push(index);\n                }\n            }\n        }\n\n        this.setState({ obstacles: array })\n    }\n\n    followPath(){\n        const {player} = this.state;\n        let array = this.state.path;\n        array.push(player)\n        this.setState({path : array})\n    }\n\n    pathToggle(){\n        let notShowPath = !this.state.showPath\n        this.setState({\n            showPath: notShowPath\n        })\n    }\n\n    clearState(){\n        this.setState({\n            columns: 10,\n            rows: 10,\n            gameStart: false,\n            player: 1,\n            obstacles: [],\n            steps: 0,\n            path: [],\n            showPath: false\n        })\n    }\n\n    handleOnScreenNav(e){\n        const target = e.target;\n        const value = target.value;\n        this.followPath();\n        if(this.state.obstacles.includes(this.state.player)){\n            this.removeObstacles(this.state.player);\n        }\n        if(value === 'Right'){\n            // right\n            if(this.state.player+1 <= this.state.columns * this.state.rows && this.state.player % this.state.columns !== 0  ){\n                this.setState({player: this.state.player + 1, steps: this.state.steps + 1 })\n            } else this.setState({player: this.state.player})\n        } else if(value === 'Left'){\n            //left\n            if(this.state.player-1 > 0 && this.state.player % this.state.columns !== 1){\n                this.setState({ player: this.state.player - 1, steps: this.state.steps + 1 })\n            } else this.setState({player: this.state.player})\n        } else if(value === 'Up'){\n            // up\n            if(this.state.player - this.state.columns > 0){\n                this.setState({player: this.state.player - this.state.columns, steps: this.state.steps + 1 })\n            } else this.setState({ player: this.state.player })\n        } else if(value === 'Down'){\n            //down\n            if(this.state.player + Number(this.state.columns) <= this.state.columns * this.state.rows){\n                this.setState({player: this.state.player + Number(this.state.columns), steps: this.state.steps + 1 })\n            } else this.setState({player: this.state.player })\n        }\n    }\n\n  render() {\n      return (\n          <Router>\n              <div className=\"App\">\n                  <Route\n                      exact path=\"/\"\n                      render={() => (\n                          !this.state.gameStart ? (\n                              <Welcome\n                                  columns={this.state.columns}\n                                  rows={this.state.rows}\n                                  handleSubmit={this.handleSubmit}\n                                  handleChange={this.handleChange} />\n                          ) : (\n                              <Board\n                                  movePlayer={this.movePlayer}\n                                  columns={this.state.columns}\n                                  rows={this.state.rows}\n                                  player={this.state.player}\n                                  steps={this.state.steps}\n                                  obstacles={this.state.obstacles}\n                                    path = {this.state.path}\n                                clearState = {this.clearState}\n                                showPath = {this.state.showPath}\n                              pathToggle = {this.pathToggle}\n                              handleOnScreenNav = {this.handleOnScreenNav}/>\n                          )\n                      )\n                      }\n                  />\n              </div>\n          </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}